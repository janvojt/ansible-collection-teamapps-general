---
## Zammad docker compose file based on
# https://raw.githubusercontent.com/zammad/zammad-docker-compose/master/docker-compose.yml
# configuration env vars:
# https://docs.zammad.org/en/latest/install/docker-compose/environment.html

version: '3.8'

services:

  zammad-backup:
    command: ["zammad-backup"]
    depends_on:
      - zammad-railsserver
      - zammad-postgresql
    entrypoint: /usr/local/bin/backup.sh
    environment:
      - BACKUP_TIME=03:00
      - HOLD_DAYS={{ zammad_backup_hold_days }}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASS}
      - TZ=Etc/UTC
    image: postgres:${POSTGRES_VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/zammad-backup:/var/tmp/zammad
      - ./data/zammad-var:/opt/zammad/var:ro
      - ./scripts/backup.sh:/usr/local/bin/backup.sh:ro

  zammad-elasticsearch:
    image: bitnami/elasticsearch:${ELASTICSEARCH_VERSION}
    restart: ${RESTART}
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms{{ zammad_elasticsearch_memory }} -Xmx{{ zammad_elasticsearch_memory }}"
    volumes:
      - ./data/elasticsearch-data:/bitnami/elasticsearch/data

  zammad-init:
    command: ["zammad-init"]
    depends_on:
      - zammad-postgresql
    environment:
      - ELASTICSEARCH_REINDEX={{ zammad_elasticsearch_reindex | ternary('true', 'false') }}
      - MEMCACHE_SERVERS=${MEMCACHE_SERVERS}
      - REDIS_URL=${REDIS_URL}
      - POSTGRESQL_HOST=${POSTGRES_HOST}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
    image: ${IMAGE_REPO}:${VERSION}
    restart: on-failure
    user: 0:0
    volumes:
      - ./data/zammad-config-nginx:/etc/nginx/sites-enabled
      - ./data/zammad-var:/opt/zammad/var
      - ./data/zammad-storage:/opt/zammad/storage

  zammad-memcached:
    command: memcached -m 250M
    image: memcached:${MEMCACHE_VERSION}
    restart: ${RESTART}
    deploy:
      resources:
        limits:
          memory: 256M

  zammad-nginx:
    command: ["zammad-nginx"]
    expose:
      - "8080"
    depends_on:
      - zammad-railsserver
      - zammad-websocket
    image: ${IMAGE_REPO}:${VERSION}
    environment:
      - MEMCACHE_SERVERS=${MEMCACHE_SERVERS}
      - REDIS_URL=${REDIS_URL}
      - POSTGRESQL_HOST=${POSTGRES_HOST}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
      - VIRTUAL_HOST={{ zammad_domain }}
      - LETSENCRYPT_HOST={{ zammad_domain }}
      - LETSENCRYPT_EMAIL={{ letsencrypt_email }}
    networks:
      - default
      - webproxy
    restart: ${RESTART}
    volumes:
      - ./data/zammad-config-nginx:/etc/nginx/sites-enabled:rw
      - ./data/zammad-var:/opt/zammad/var:ro
      - ./data/zammad-storage:/opt/zammad/storage:ro
    # entrypoint: ["bash", "-x", "/docker-entrypoint.sh"]

  zammad-postgresql:
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    image: postgres:${POSTGRES_VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/postgresql-data:/var/lib/postgresql/data

  zammad-railsserver:
    command: ["zammad-railsserver"]
    depends_on:
      - zammad-memcached
      - zammad-postgresql
      - zammad-redis
    environment:
      - MEMCACHE_SERVERS=${MEMCACHE_SERVERS}
      - REDIS_URL=${REDIS_URL}
      - POSTGRESQL_HOST=${POSTGRES_HOST}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
    image: ${IMAGE_REPO}:${VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/zammad-var:/opt/zammad/var
      - ./data/zammad-storage:/opt/zammad/storage

  zammad-redis:
    image: redis:${REDIS_VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/redis-data:/data
    deploy:
      resources:
        limits:
          memory: 128M

  zammad-scheduler:
    command: ["zammad-scheduler"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
      - zammad-redis
    environment:
      - MEMCACHE_SERVERS=${MEMCACHE_SERVERS}
      - REDIS_URL=${REDIS_URL}
      - POSTGRESQL_HOST=${POSTGRES_HOST}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
    image: ${IMAGE_REPO}:${VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/zammad-var:/opt/zammad/var
      - ./data/zammad-storage:/opt/zammad/storage

  zammad-websocket:
    command: ["zammad-websocket"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
      - zammad-redis
    environment:
      - MEMCACHE_SERVERS=${MEMCACHE_SERVERS}
      - REDIS_URL=${REDIS_URL}
      - POSTGRESQL_HOST=${POSTGRES_HOST}
      - POSTGRESQL_DB=${POSTGRES_DB}
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
    image: ${IMAGE_REPO}:${VERSION}
    restart: ${RESTART}
    volumes:
      - ./data/zammad-var:/opt/zammad/var
      - ./data/zammad-storage:/opt/zammad/storage

networks:
  default:
    driver: bridge
  webproxy:
    external: True
    name: webproxy
